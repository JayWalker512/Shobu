/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Shobu;

import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonToken;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.StringReader;
import java.util.Scanner;
import java.lang.ProcessBuilder;
import java.lang.Process;

public class App {

    private static String getStdin() {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        return s;
    }

    public static void main(String[] args) {
        String inputString = "lol"; //getStdin();

        ProcessBuilder pb = new ProcessBuilder("cat");
        Process p;
        try {
            p = pb.start();
        } catch (Exception e) {
            System.out.println("Couldn't start subprocess.");
            return;
        }
        if (p == null) {
            return;
        }
        OutputStream subprocessInput = p.getOutputStream();
        InputStream subprocessOutput = p.getInputStream();
        int bytesActuallyRead = 0;
        while (bytesActuallyRead < 30) {
            try {
                subprocessInput.write(inputString.getBytes());
                subprocessInput.flush();
            } catch (Exception e) {
                System.out.println("Error writing to subprocess stdin.");
                return;
            }
            StringBuilder sb = new StringBuilder();
            byte b[] = new byte[2];
            try {
                while (subprocessOutput.available() > 0) {
                    subprocessOutput.read(b, 1, 1);
                    bytesActuallyRead += 1;
                    break;
                }
                sb.append(new String(b));
            } catch (Exception e) {
                System.out.println("Error reading subprocess stdout");
                return;
            }
            System.out.print(sb.toString());
        }
        p.destroy();
        tryJson();
    }

    public static void tryJson() {

        // seems the json reader does not expect to consume multiple consecutive discrete json objects
        // so I'll have to deal with that myself.
        String json = "{\"brand\" : \"Toyota\", \"doors\" : 5}\n{\"brand\" : \"Mercedes\", \"doors\" : 2}";

        JsonReader jsonReader = new JsonReader(new StringReader(json));

        try {
            while(jsonReader.hasNext()){
                JsonToken nextToken = jsonReader.peek();
                System.out.println(nextToken);

                if(JsonToken.BEGIN_OBJECT.equals(nextToken)){

                    jsonReader.beginObject();

                } else if(JsonToken.NAME.equals(nextToken)){

                    String name  =  jsonReader.nextName();
                    System.out.println(name);

                } else if(JsonToken.STRING.equals(nextToken)){

                    String value =  jsonReader.nextString();
                    System.out.println(value);

                } else if(JsonToken.NUMBER.equals(nextToken)){

                    long value =  jsonReader.nextLong();
                    System.out.println(value);

                } else if (JsonToken.END_OBJECT.equals(nextToken)) {
                    //jsonReader.endObject();
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
